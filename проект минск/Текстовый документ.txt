smart-support-hackathon/
│
├── app.py                          # Основной сервер Flask/FastAPI
├── requirements.txt               # Зависимости Python
├── Dockerfile                     # Для контейнеризации
├── docker-compose.yml             # (опционально) для запуска всего окружения
│
├── backend/
│   ├── knowledge_base_builder.py  # Создание эмбеддингов и FAISS-индекса
│   ├── classifier.py              # Классификация запросов с помощью Qwen2.5
│   ├── retriever.py               # Поиск релевантных ответов
│   └── feedback_handler.py        # Механизм обратной связи
│
├── frontend/
│   ├── public/
│   └── src/
│       ├── components/            # React-компоненты интерфейса
│       │   ├── ChatInterface.jsx
│       │   ├── RecommendationPanel.jsx
│       │   └── ConfidenceIndicator.jsx
│       └── App.js
│       └── index.js
│
├── data/
│   ├── smart_support_vtb_belarus_faq_final.xlsx  # Исходный файл (будет в .gitignore)
│   ├── knowledge_base.json         # Обработанная база знаний с метаданными
│   └── knowledge_base.index        # Векторный индекс FAISS
│
├── scripts/
│   └── build_knowledge_base.py    # Скрипт для однократного запуска создания базы
│
├── presentation/
│   └── Smart-Support-Presentation.pptx  # Презентация для судей
│
├── demo/
│   └── demo.mp4                   # Демо-видео (1-2 минуты)
│
└── README.md                      # Инструкция по запуску